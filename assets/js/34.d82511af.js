(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{446:function(a,s,t){"use strict";t.r(s);var e=t(10),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"三-使用-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-使用-gitlab"}},[a._v("#")]),a._v(" 三.使用 Gitlab")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("前言")]),a._v(" "),s("p",[a._v("Gitlab 这里主要拿来作为代码仓库案例使用，作用类似 github、gitee")])]),a._v(" "),s("h2",{attrs:{id:"_1-安装过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装过程"}},[a._v("#")]),a._v(" 1.安装过程")]),a._v(" "),s("h3",{attrs:{id:"_1-1-获取镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-获取镜像"}},[a._v("#")]),a._v(" 1.1 获取镜像")]),a._v(" "),s("p",[a._v("这里我们拉取最新的 gitlab-ce 镜像")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull gitlab/gitlab-ce\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_1-2-获取容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-获取容器"}},[a._v("#")]),a._v(" 1.2 获取容器")]),a._v(" "),s("p",[a._v("我们使用 docker run 命令启动一个新的 Gitlab 容器")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8443")]),a._v(":443 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8090")]),a._v(":80 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8022")]),a._v(":22 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/gitlab/config:/etc/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/gitlab/logs:/var/log/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/gitlab/data:/var/opt/gitlab "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\ngitlab/gitlab-ce\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h3",{attrs:{id:"_1-3-完成安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-完成安装"}},[a._v("#")]),a._v(" 1.3 完成安装")]),a._v(" "),s("ul",[s("li",[a._v("关闭防火墙 8090 端口")]),a._v(" "),s("li",[a._v("打开页面"),s("a",{attrs:{href:"http://81.71.127.69:8090",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://81.71.127.69:8090"),s("OutboundLink")],1)])]),a._v(" "),s("h2",{attrs:{id:"_2-其他问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他问题"}},[a._v("#")]),a._v(" 2.其他问题")]),a._v(" "),s("p",[a._v("--restart: 当 Docker 重启时，容器自动启动，否则就需要使用 docker restart 启动\ngitlab 端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问 8899，内外都配置 8899\n一般 Gitlab 有三个端口要使用：ssh，https，主服务地址。\nssh 默认是 22，这里我改为了 333，下方配置文件内也要改为 333\n然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("333")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8899")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\nsystemctl reload firewalld\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_2-1-修改-gitlab-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-修改-gitlab-配置文件"}},[a._v("#")]),a._v(" 2.1 修改 Gitlab 配置文件")]),a._v(" "),s("p",[a._v("容器启动后，我们需要修改 Gitlab 配置文件，修改 Gitlab 主服务地址和 SSH 服务地址")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /home/gitlab/config/gitlab.rb\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("在文件内增加三条配置：\n• external_url: 外部服务访问地址\n• gitlab_rails['gitlab_ssh_host']：SSH 代码拉取地址\n• gitlab_rails['gitlab_shell_ssh_port']：SSH 代码拉取端口")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("external_url "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://外部访问域名/地址:端口'")]),a._v("\ngitlab_rails"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'gitlab_ssh_host'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'SSH外部访问域名/地址'")]),a._v("\ngitlab_rails"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'gitlab_shell_ssh_port'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" SSH端口\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"_3-1-如果修改-ssh-端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-如果修改-ssh-端口"}},[a._v("#")]),a._v(" 3.1 如果修改 SSH 端口")]),a._v(" "),s("p",[a._v("SSH 默认的端口是 22 。这里内外分开，将 Gitlab 容器内 SSH 端口改为了 333 。\n先进入 Gitlab 容器，直接编辑 /assets/sshd_config 和 /etc/ssh/sshd_config 这两个文件即可。修改最上方的 Port 字段。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" gitlab /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /assets/sshd_config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/ssh/sshd_config\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("接着重启 Gitlab")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" restart gitlab\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-启动-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-启动-gitlab"}},[a._v("#")]),a._v(" 2.2 启动 Gitlab")]),a._v(" "),s("p",[a._v("访问 宿主机:端口 ，查看 Gitlab 启动情况，如果显示 502 ，则代表正在启动中。第一次启动时间可能会有些长。如显示以下界面，代表启动成功。")]),a._v(" "),s("p",[a._v("修改密码后，默认管理员是 root ，登录进入即可")])])}),[],!1,null,null,null);s.default=r.exports}}]);
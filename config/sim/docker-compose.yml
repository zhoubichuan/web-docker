version: '3.8'

services:
  dev-nginx: # 服务的名称
    image: nginx:latest # 指定了服务所使用的 Docker 镜像
    env_file: .env
    ports: # 指定了服务的端口映射关系
      - "${NGINX_PORT}:83"
    volumes: # 指定了服务的卷挂载配置
      - ${NGINX_VOLUMES_HTML}:/usr/share/nginx/html
      - ${NGINX_VOLUMES_CONFD}:/etc/nginx/conf.d
      - ${NGINX_VOLUMES_CONF}:/etc/nginx/nginx.conf

  # --------> MY-APP-Server <--------
  my-app:
    build:
      context: ../
      dockerfile: ./.docker/node.dockerfile
    image: my-app
    container_name: my-app
    restart: unless-stopped
    working_dir: /usr/src
    env_file: .env
    ports:
      - ${SERVER_PORT}:4000
    volumes:
      - my-app-volume:/usr
    networks:
      - my-network
    stdin_open: true
    tty: true
  # --------> MY-APP-Server <--------
  rabbitmq:
    image: 'rabbitmq:3.12.6-management'
    container_name: rabbitmq_service
    ports:
      - '5672:5672'
      - '15672:15672' # 管理界面端口
    environment:
      RABBITMQ_DEFAULT_USER: 'guest'
      RABBITMQ_DEFAULT_PASS: 'guest'
  # --------> MY-APP-Server <--------
  nacos:
    image: 'nacos/nacos-server:2.2.0'
    container_name: nacos_service
    ports:
      - '8848:8848'
    environment:
      - MODE=standalone

  # --------> MY-APP-MONGODB <--------
  my-mongo:
    image: mongo:latest
    container_name: my-mongo
    env_file:
      - .env
    environment:
      DB_PASS: ${DB_PASS}
      DB_USER: ${DB_USER}
    restart: always
    networks:
      - my-network
    ports:
      - ${DB_PORT}:27017
    volumes:
      - my-mongodb-volume:/data/db


  # --------> MY-APP-MYSQL <--------
  my-mysql:
    # image: 'mysql:8'
    image: mysql:latest
    container_name: mysql_service
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - '${MYSQL_DB_PORT}:3306'
    volumes:
      - my-mysql-volume:/var/lib/mysql
    networks:
      - my-network
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE} # 可选，初始化数据库名
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}


  # --------> MY-APP-REDIS <--------
  my-redis:
    # image: 'redis:6'
    image: "bitnami/redis:latest"
    container_name: my-redis
    user: "root"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - my-network
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:6379
    restart: unless-stopped
    volumes:
      - ${REDIS_PASS}/my-redis:/bitnami/redis

networks:
  my-network:
    external:
      name: my-network

volumes:
  my-app-volume:
  my-mongodb-volume:
  my-mysql-volume:
